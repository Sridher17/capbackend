{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS\\\\mydress\\\\src\\\\components\\\\Suggestion.js\";\n// components/Suggestion.js\nimport React from 'react';\nimport { Paper, Typography, Grid } from '@mui/material';\nimport PaletteIcon from '@mui/icons-material/Palette';\n\n// models/Suggestion.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mongoose = require('mongoose');\nconst SuggestionSchema = new mongoose.Schema({\n  date: {\n    type: Date,\n    default: Date.now\n  },\n  colors: [String],\n  // Suggested colors for the day\n  weather: String // e.g., Sunny, Cloudy, etc.\n});\nmodule.exports = mongoose.model('Suggestion', SuggestionSchema);\nconst Suggestion = () => {\n  // Dummy data (you can fetch this from a server or API)\n  const suggestedColors = ['Red', 'Blue', 'Yellow'];\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      padding: 2,\n      marginTop: 8\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      fontFamily: \"Roboto\",\n      children: \"Today's Dress Color Suggestions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: suggestedColors.map((color, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            padding: 2,\n            backgroundColor: color.toLowerCase(),\n            color: '#fff',\n            textAlign: 'center',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(PaletteIcon, {\n            sx: {\n              marginRight: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: color\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = Suggestion;\nexport default Suggestion;\nvar _c;\n$RefreshReg$(_c, \"Suggestion\");","map":{"version":3,"names":["React","Paper","Typography","Grid","PaletteIcon","jsxDEV","_jsxDEV","mongoose","require","SuggestionSchema","Schema","date","type","Date","default","now","colors","String","weather","module","exports","model","Suggestion","suggestedColors","sx","padding","marginTop","children","variant","gutterBottom","fontFamily","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","map","color","index","item","xs","backgroundColor","toLowerCase","textAlign","display","justifyContent","alignItems","marginRight","_c","$RefreshReg$"],"sources":["D:/VS/mydress/src/components/Suggestion.js"],"sourcesContent":["// components/Suggestion.js\r\nimport React from 'react';\r\nimport { Paper, Typography, Grid } from '@mui/material';\r\nimport PaletteIcon from '@mui/icons-material/Palette';\r\n\r\n// models/Suggestion.js\r\nconst mongoose = require('mongoose');\r\n\r\nconst SuggestionSchema = new mongoose.Schema({\r\n  date: { type: Date, default: Date.now },\r\n  colors: [String], // Suggested colors for the day\r\n  weather: String, // e.g., Sunny, Cloudy, etc.\r\n});\r\n\r\nmodule.exports = mongoose.model('Suggestion', SuggestionSchema);\r\n\r\n\r\nconst Suggestion = () => {\r\n  // Dummy data (you can fetch this from a server or API)\r\n  const suggestedColors = ['Red', 'Blue', 'Yellow'];\r\n\r\n  return (\r\n    <Paper sx={{ padding: 2, marginTop: 8 }}>\r\n      <Typography variant=\"h6\" gutterBottom fontFamily=\"Roboto\">\r\n        Today's Dress Color Suggestions\r\n      </Typography>\r\n      <Grid container spacing={2}>\r\n        {suggestedColors.map((color, index) => (\r\n          <Grid item xs={4} key={index}>\r\n            <Paper\r\n              sx={{\r\n                padding: 2,\r\n                backgroundColor: color.toLowerCase(),\r\n                color: '#fff',\r\n                textAlign: 'center',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <PaletteIcon sx={{ marginRight: 1 }} />\r\n              <Typography>{color}</Typography>\r\n            </Paper>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Suggestion;\r\n\r\n\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,UAAU,EAAEC,IAAI,QAAQ,eAAe;AACvD,OAAOC,WAAW,MAAM,6BAA6B;;AAErD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AAEpC,MAAMC,gBAAgB,GAAG,IAAIF,QAAQ,CAACG,MAAM,CAAC;EAC3CC,IAAI,EAAE;IAAEC,IAAI,EAAEC,IAAI;IAAEC,OAAO,EAAED,IAAI,CAACE;EAAI,CAAC;EACvCC,MAAM,EAAE,CAACC,MAAM,CAAC;EAAE;EAClBC,OAAO,EAAED,MAAM,CAAE;AACnB,CAAC,CAAC;AAEFE,MAAM,CAACC,OAAO,GAAGb,QAAQ,CAACc,KAAK,CAAC,YAAY,EAAEZ,gBAAgB,CAAC;AAG/D,MAAMa,UAAU,GAAGA,CAAA,KAAM;EACvB;EACA,MAAMC,eAAe,GAAG,CAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,CAAC;EAEjD,oBACEjB,OAAA,CAACL,KAAK;IAACuB,EAAE,EAAE;MAAEC,OAAO,EAAE,CAAC;MAAEC,SAAS,EAAE;IAAE,CAAE;IAAAC,QAAA,gBACtCrB,OAAA,CAACJ,UAAU;MAAC0B,OAAO,EAAC,IAAI;MAACC,YAAY;MAACC,UAAU,EAAC,QAAQ;MAAAH,QAAA,EAAC;IAE1D;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACb5B,OAAA,CAACH,IAAI;MAACgC,SAAS;MAACC,OAAO,EAAE,CAAE;MAAAT,QAAA,EACxBJ,eAAe,CAACc,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAChCjC,OAAA,CAACH,IAAI;QAACqC,IAAI;QAACC,EAAE,EAAE,CAAE;QAAAd,QAAA,eACfrB,OAAA,CAACL,KAAK;UACJuB,EAAE,EAAE;YACFC,OAAO,EAAE,CAAC;YACViB,eAAe,EAAEJ,KAAK,CAACK,WAAW,CAAC,CAAC;YACpCL,KAAK,EAAE,MAAM;YACbM,SAAS,EAAE,QAAQ;YACnBC,OAAO,EAAE,MAAM;YACfC,cAAc,EAAE,QAAQ;YACxBC,UAAU,EAAE;UACd,CAAE;UAAApB,QAAA,gBAEFrB,OAAA,CAACF,WAAW;YAACoB,EAAE,EAAE;cAAEwB,WAAW,EAAE;YAAE;UAAE;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACvC5B,OAAA,CAACJ,UAAU;YAAAyB,QAAA,EAAEW;UAAK;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B;MAAC,GAdaK,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAetB,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEZ,CAAC;AAACe,EAAA,GA/BI3B,UAAU;AAiChB,eAAeA,UAAU;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}